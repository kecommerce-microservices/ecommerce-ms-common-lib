name: CI Pipeline for Pull Requests to Develop

on:
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build application
        run: ./gradlew build

  sonarqube:
    name: SonarQube analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  trivy:
    name: Scan Trivy
    runs-on: ubuntu-latest
    needs: build

    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: "fs"
          format: sarif
          scanners: "vuln,secret,config"
          output: "trivy-java-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: java-result
          sarif_file: "trivy-java-results.sarif"

  run-tests:
    name: Run unit and integration tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Execute application tests
        run: ./gradlew test --rerun-tasks --stacktrace

#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          files: ./build/reports/jacoco/test/jacocoTestReport.xml
#          name: ecommerce-ms-common-lib
#          verbose: true
#          fail_ci_if_error: true
#          token: ${{ secrets.CODECOV_TOKEN }}